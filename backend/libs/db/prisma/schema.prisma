generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  role         Role      @default(Reader)
  passwordHash String
  refreshToken String?
  comments     Comment[]
  likes        Like[]
  posts        Post[]    @relation("author")
}

model Post {
  id             String    @id @default(uuid())
  title          String
  content        String?
  idempotencyKey String    @unique @default(uuid())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  status         Status
  image          Image?    @relation("postToImage")
  author         User?     @relation("author", fields: [authorId], references: [id])
  authorId       String?
  likes          Like[]
  comments       Comment[]
}

model Like {
  id     String  @id @default(uuid())
  post   Post?   @relation(fields: [postId], references: [id])
  postId String?
  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@unique([postId, userId])
}

model Comment {
  id      String  @id @default(uuid())
  content String
  user    User?   @relation(fields: [userId], references: [id])
  userId  String?
  post    Post?   @relation(fields: [postId], references: [id])
  postId  String?

  @@unique([postId, userId])
}

model Image {
  id        String   @id @default(uuid())
  imageUrl  String   @unique
  createdAt DateTime @default(now())
  postId    String   @unique
  post      Post     @relation("postToImage", fields: [postId], references: [id])
}

enum Role {
  Reader
  Author
}

enum Status {
  Draft
  Published
}
